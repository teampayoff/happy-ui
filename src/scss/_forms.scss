@import "variables";
@import "node_modules/bootstrap/scss/variables";
@import "node_modules/bootstrap/scss/mixins";

// Forms

.form-control {
  font-size: $font-size-base * 1.125;
  line-height: $font-size-base * $line-height-base; // ~24px
}

.custom-checkbox.large  {
  .custom-control-label {
    line-height: 1.8rem;

    &:before {
      width: 1.8rem;
      height: 1.8rem;
      box-shadow: none;
      background-color: #E5E7EB;
    }

    &:after {
      width: 1.8rem;
      height: 1.8rem;
    }
  }

}

//textCheck component specific bootstrap overrides
.text-check {
  .custom-control-label {
    line-height: 1.8rem;

    &:before {
      position: relative;
      left: -2.5rem;
    }

    &:after {
      left: -2.5rem;
    }
  }

  .was-validated .form-control:valid,
  .form-control.is-valid,
  .was-validated .form-control:invalid,
  .form-control.is-invalid {
      background-image: none;
      padding-right: 0.75rem;
  }
}

.custom-checkbox.green {
  .custom-control-input:checked ~ .custom-control-label::before {
    background-color: $green;
  }
  .custom-control-label::before {
    border: none !important;
    box-shadow: none !important;
  }
}


// Validation states
@mixin form-validation-bg($state, $color, $percent) {
  .form-control,
  .custom-select {
    .was-validated &:#{$state},
    &.is-#{$state} {
      &:focus {
        background-color: lighten($color, $percent);
      }
    }
  }
  .custom-select:focus {
    box-shadow: inset 0 1px 1px rgba(0, 18, 57, 0.075), 0 0 0 0.2rem rgba(0, 178, 255, 0.25) !important;
  }
}

@include form-validation-bg("valid", $green, 50%);
@include form-validation-bg("invalid", $red, 38%);


// Input sizes
.form-control-sm {
  font-size: $font-size-base;
  line-height: $line-height-sm;
}

.form-control-lg {
  font-size: $font-size-base * 1.5;
  line-height: $line-height-lg;
}

.form-group {
  label:not(.custom-control-label) {
    font-size: 0.75rem;
    letter-spacing: 1px;
    text-transform: uppercase;

    > span {
      color: $text-muted;
      text-transform: capitalize;

      &:before {
        content: " â€¢ ";
      }
    }
  }

  @include media-breakpoint-up("sm") {
    margin-bottom: 1.5rem;
  }

  // Allow for inputs to sit flush against one another
  .row.no-gutters {
    [class^="col"] {
      .form-control,
      select.form-control {
        position: relative;
      }

      // remove border radius on all but first and last child
      &:not(:first-child):not(:last-child) {
        .form-control,
        select.form-control {
          border-radius: 0;
        }
      }

      // set z-index of active elements so active border shows all the way around
      .form-control,
      select.form-control {
        &:focus {
          z-index: $zindex-dropdown;
        }
      }
    }

    @include media-breakpoint-down("xs") {
      [class^="col"] {
        // prevent double borders
        &:not(:first-child) {
          margin-top: -1px;
        }

        &:first-child {
          .form-control,
          select.form-control {
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
          }
        }

        &:last-child {
          .form-control,
          select.form-control {
            border-top-left-radius: 0;
            border-top-right-radius: 0;
          }
        }
      }
    }

    @include media-breakpoint-up("sm") {
      [class^="col"] {
        // prevent double borders
        &:not(:first-child) {
          margin-left: -1px;
        }

        &:first-child {
          .form-control,
          select.form-control {
            border-bottom-right-radius: 0;
            border-top-right-radius: 0;
          }
        }

        &:last-child {
          .form-control,
          select.form-control {
            border-bottom-left-radius: 0;
            border-top-left-radius: 0;
          }
        }
      }
    }
  }
}

.form-text {
  font-size: $font-size-sm;
  margin-top: 0.75rem;
}

.invalid-feedback {
  font-weight: $font-weight-bold;
}


//=================================================
//REMOVING CHECKS/X MARKS FOR VALID/INVALID SELECTS
//=================================================
select.was-validated .form-control:valid,
select.form-control.is-valid,
select.was-validated .form-control:invalid,
select.form-control.is-invalid {
  background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3e%3cpath fill='%23334161' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right 0.75rem center/8px 10px,
  url('') !important;
}

.custom-control-label::before,
.custom-control-label::after {
  left: -2.125rem;
}

.custom-control {
  padding-left: 2.125rem;
}

.was-validated .custom-control-input:invalid ~ .custom-control-label::before,
.custom-control-input.is-invalid ~ .custom-control-label::before {
  border: none !important;
}

//input prefix
.form-group {
  position: relative;
}

.form-control.default-padding {
  padding-left: 20px;
}

.input-prefix {
  position: absolute;
  bottom: 0.85rem;
  left: 0.6rem;
}

p a {
  text-decoration: underline;
}
